{"version":3,"sources":["dispatcher.js","actions/Actions.js","stores/Stores.js","components/home/home-loginbar.js","components/home/home-input.js","components/list/listtable.js","components/list.js","components/home/home-todaysstatistics.js","components/home/home-graph.js","components/home.js","App.js","index.js"],"names":["Dispatcher","compare","a","b","r","Created","reloadTickets","token","username","url","$","ajax","contentType","type","processdata","dataType","headers","success","data","console","log","filterresults","filter","timezone","sort","Object","keys","length","dispatcher","dispatch","tickets","reloadToken","newToken","newusername","setTimeout","healthStore","title","Comment","LatestTicket","text","id","Date","now","this","todos","push","complete","emit","action","createTodo","receiveToken","receiveTickets","EventEmitter","register","handleActions","bind","window","userPool","CognitoUserPool","UserPoolId","ClientId","authtoken","HomeLoginBar","getToken","state","on","listenerCount","removeListener","setState","getAll","Actions","e","target","value","props","changeUsername","password","changePassword","changeToken","usr","pas","authenticationDetails","AuthenticationDetails","Username","Password","CognitoUser","Pool","authenticateUser","onSuccess","authresult","getIdToken","getJwtToken","alert","onFailure","err","SignIn","class","style","color","placeholder","onChange","handleChangeUsername","handleChangePassword","onClick","handleLogin","React","Component","HomeInput","total","items","created","temp","comment","getAllWithTickets","getLatestTicket","int","document","getElementById","float","date","year","getFullYear","month","getMonth","createdtime","getHours","getMinutes","getDate","JSON","stringify","toString","error","minut","minutes","changeTemp","changeTime","name","putTicket","ListTable","confirm","map","i","TaskID","deleteissue","require","List","concat","HomeTodaysStatistics","todayscount","currentdate","latestTicket","substr","ticket","indexOf","to","path","component","sampledateobject","parse","sampletempobject","parseFloat","adjustedtickets","datetime","x","y","HomeGraph","datatickets","adjusteddatatickets","graphdata","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","display","scales","xAxes","time","format","unit","displayFormats","tooltipFormat","scaleLabel","labelString","yAxes","ticks","beginAtZero","min","max","Home","latesttemp","latesttime","App","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.70f73f8e.chunk.js","sourcesContent":["import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;","import dispatcher from \"../dispatcher\";\nimport $ from \"jquery\";\n\nexport function createTodo(text) {\n  dispatcher.dispatch({\n    type: \"CREATE_TODO\",\n    text\n  });\n}\n\nexport function deleteTodo(id) {\n  dispatcher.dispatch({\n    type: \"DELETE_TODO\",\n    id\n  });\n}\n\nfunction compare( a, b ){\n var r = 0;\n  if( a.Created > b.Created ){ r = -1; }\n  else if( a.Created < b.Created ){ r = 1; }\n  return r;\n  }\n\nexport function reloadTickets(token, username) {\n  var url = \"https://tcnsvn5d6b.execute-api.us-east-2.amazonaws.com/prod/goodbye?username=\"+username;\n  $.ajax({\n            contentType: \"application/json\",\n            type: 'GET',\n            url: url,\n            processdata: false,\n            dataType: 'json',\n            headers: {\n                'Authorization': token, \n                },\n            success: function(data){               \n              console.log(data['body']['Items'][0]['TaskID']);\n              //console.log(data['body']['Items'][1]['TaskID']);\n              var filterresults = '';\n              filterresults = data['body']['Items'].filter(function(a){\n                return a.timezone == 'health'\n              });\n              filterresults.sort(compare);\n              console.log(filterresults);\n              console.log(Object.keys(filterresults).length);\n              dispatcher.dispatch({type: \"GET_TICKETS\",\n                tickets : filterresults\n              });\n              }\n    })\n}\n\n//20200424\nexport function putTicket(temp, comment, username, token){\n  //ここでAPIを叩いてレスポンスをもらうべき！\n  //POST用の最低限の変数を用意。後でHTMLフォームでユーザーがインプットするようにコードを改変\n  var date = new Date();\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var createdtime = date.getHours() + ':' + date.getMinutes();\n  console.log(createdtime)\n  if (month.length === 1){\n    month = '0' + month;\n  }else{\n    console.log('zero');\n  }\n  var day = date.getDate();\n  var created = year + '-' + month + '-' + day + '-' + createdtime;\n\n  //20191014 ペイロード用にデータを入力。あとはこれを使ってPOSTするようAPI Gatewayをいじってバグ直しておしまい\n  $.ajax( {\n    contentType: \"application/json\",\n    type: 'POST',\n    url: \"https://tcnsvn5d6b.execute-api.us-east-2.amazonaws.com/prod/goodbye?username=\"+username,\n    processdata: false,\n    dataType: 'json',\n    data: JSON.stringify({\n      'created' : created,\n      'username' : username,\n      'title' : temp,\n      'Issuetype' : 'health',\n      'Status' : 'NS',\n      'timezone' : 'health',\n      'Due' : createdtime.toString(),\n      'Comment' : comment,\n      'EstTime' : 'None',\n      'Priority' : 'None'\n    }),\n    headers: {\n      'Authorization': token, \n    },\n    success: function(data){\n      console.log(data);\n      window.alert('おねつが正常に登録されました');\n      reloadTickets(token, username);\n    },\n    error: function(data){\n      console.log('error', data);\n      }                \n    })\n}\n\nexport function reloadToken(newToken, newusername) {\n  // axios(\"http://someurl.com/somedataendpoint\").then((data) => {\n  //   console.log(\"got the data!\", data);\n  // });\n\n  dispatcher.dispatch({type: \"FETCH_TOKEN\"});\n  setTimeout(() => {\n    dispatcher.dispatch({type: \"RECEIVE_TOKEN\", \n      token: newToken,\n      username: newusername});\n  }, 1000);\n}","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass HealthStore extends EventEmitter {\n  constructor() {\n    super();\n    this.token = \"This is old token\";\n    this.username = \"no username\";\n    //20200423\n    this.tickets = [{title: \"-\", Created: \"---\", Comment: \"---\"}];\n    //20200424\n    this.LatestTicket = [];\n  }\n\n  //unused-functions\n  createTodo(text) {\n    const id = Date.now();\n\n    this.todos.push({\n      id,\n      text,\n      complete: false\n    });\n\n    this.emit(\"change\");\n  }\n\n  receiveToken(token, username) {\n    this.token = token;\n    this.username = username;\n    this.emit(\"change\");\n  }\n  //20200423\n  receiveTickets(tickets){\n    this.tickets = tickets;\n    this.emit(\"change\");\n  }\n  //20200424\n  receiveLatestTicket(tickets){\n    this.LatestTicket = tickets[0];\n    this.emit(\"change\");\n  }\n\n  getAll() {\n    return {\n      \"token\" : this.token,\n      \"username\" : this.username\n    };\n  }\n  //20200423\n  getAllWithTickets(){\n    return {\n      \"token\":this.token,\n      \"username\":this.username,\n      \"tickets\":this.tickets\n    }\n  }\n  //20200424\n  getLatestTicket(){\n    return {\n      \"LatestTicket\":this.LatestTicket\n    }\n  }\n\n  //used-functions\n  handleActions(action) {\n    switch(action.type) {\n      case \"CREATE_TODO\": {\n        this.createTodo(action.text);\n      }\n      case \"RECEIVE_TOKEN\": {\n        this.receiveToken(action.token, action.username);\n        console.log(action.token);\n      }\n      //20200423\n      case \"GET_TICKETS\" : {\n        this.receiveTickets(action.tickets);\n        console.log(action.tickets);\n      }\n      //20200424\n      case \"PUT_TICKET\" : {\n        //現時点では何もしないが、PUT_TICKET後にtodayの欄を更新した方がいいのかもしれない\n        //20200425\n        this.receiveTickets(action.tickets);\n        console.log(action.tickets);\n      }\n    }\n  }\n}\n\nconst healthStore = new HealthStore;\ndispatcher.register(healthStore.handleActions.bind(healthStore));\nwindow.dispatcher = dispatcher;\nexport default healthStore;","import React from \"react\";\n//import {SignIn} from \"../../api/login.js\";\nimport AWS from \"aws-sdk\";\nimport {\n  CognitoUserPool,\n  CognitoUserAttribute,\n  CognitoUser,\n  AuthenticationDetails\n} from 'amazon-cognito-identity-js';\n\nimport * as Actions from \"../../actions/Actions\";\nimport healthStore from \"../../stores/Stores\";\n\n//AWS Credentials Initialization\nconst userPool = new CognitoUserPool({\n    UserPoolId: 'us-east-2_J3czsOpsv',\n    ClientId: '3atuib3usf88b9cd72qbs1jvod'\n})\n\nvar authtoken = '';\n\n//AWS Sign-In Function\nfunction SignIn(usr, pas){\n\n    const authenticationDetails = new AuthenticationDetails({\n        Username : usr,\n        Password : pas\n    })\n    const cognitoUser = new CognitoUser({\n        Username : usr,\n        Pool : userPool\n    })\n    cognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: function (authresult) {\n            authtoken = authresult.getIdToken().getJwtToken();\n            window.alert('ログインしました')\n            //var url = \"https://tcnsvn5d6b.execute-api.us-east-2.amazonaws.com/prod/goodbye?username=\"+usr;\n            //console.log(result);\n            //authtoken = result;\n            //alert('success');\n            //20191014 ペイロード用にデータを入力。あとはこれを使ってPOSTするようAPI Gatewayをいじってバグ直しておしまい\n            var currenttime = new Date();\n            //console.log(result);\n            //console.log(currenttime.toString());\n            //authtoken = result;\n        }, onFailure: (err) => {\n            return(err);\n            console.log(err);\n        }\n    })\n}\n\n//Component Class Description\nexport default class HomeLoginBar extends React.Component {\n  constructor(){\n    super();\n    this.getToken = this.getToken.bind(this);\n    this.state = {\n      token: \"this is old token\",\n      username: \"this is old username\"\n    };\n  }\n\n  componentDidMount() {\n    healthStore.on(\"change\", this.getToken);\n    console.log(\"count\", healthStore.listenerCount(\"change\"));\n  }\n\n  componentWillUnmount() {\n    healthStore.removeListener(\"change\", this.getToken);\n  }\n\n  getToken() {\n    this.setState({\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"]\n    });\n  }\n\n  reloadToken(newToken, newusername) {\n    Actions.reloadToken(newToken, newusername);\n  }\n  //20200425\n  reloadTickets(newToken, newusername) {\n    Actions.reloadTickets(newToken, newusername);\n    console.log(this.state.tickets);\n  }\n\n\n  handleChangeUsername(e) {\n    const username = e.target.value;\n    this.props.changeUsername(username);\n  }\n  handleChangePassword(e) {\n    const password = e.target.value;\n    this.props.changePassword(password);\n  }\n  handleChangeToken(e) {\n    const token = \"new token\";\n    this.props.changeToken(token);\n  }\n  handleLogin(e){\n    const usr = this.props.username;\n    const pas = this.props.password;\n    const signin = SignIn(usr, pas);\n    setTimeout(()=>{\n          this.props.changeToken(authtoken);\n          this.setState({token:authtoken, username:usr});\n          this.reloadToken(authtoken, usr);\n          this.reloadTickets(authtoken, usr);\n    }, 3000)\n  }\n\n  render() {\n    const titlestyle = {color:'#663300'};\n    const token = this.state.token;\n    const username = this.state.username;\n    //console.log(this.props);\n    //削除した：<input class=\"btn btn-lg btn btn-pale btn-block\" type=\"button\" value=\"UpdateToken\" onClick={this.reloadToken.bind(this, token, username)} />\n    return (\n      <div>\n        <div class = \"container\">\n          <div class=\"wrapper\">\n            <h2 class=\"form-signin-heading\" style={titlestyle}>こんにちは！！！</h2>\n            <hr class=\"colorgraph\" />\n            <input class=\"form-control\" placeholder=\"Email\" value={this.props.username} onChange={this.handleChangeUsername.bind(this)} />\n            <input type=\"password\" placeholder=\"Password\" class=\"form-control\" value={this.props.password} onChange={this.handleChangePassword.bind(this)} />\n            <br />\n            <input class=\"btn btn-lg btn btn-pale btn-block\" type=\"button\" value=\"ログインする\" onClick={this.handleLogin.bind(this)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Actions from \"../../actions/Actions\";\nimport healthStore from \"../../stores/Stores\"; \n\nexport default class HomeInput extends React.Component {\n  constructor(){\n    super();\n    this.getToken = this.getToken.bind(this);\n    this.state = {\n      total: 5, \n      items:[\n        {id: 0, created: \"-\", temp: \"-\", comment: \"-\"}\n      ],\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      tickets: [],\n      LatestTicket: []\n    }\n  }\n  componentDidMount() {\n    healthStore.on(\"change\", this.getToken);\n    console.log(\"count\", healthStore.listenerCount(\"change\"));\n  }\n\n  componentWillUnmount() {\n    healthStore.removeListener(\"change\", this.getToken);\n  }\n\n  getToken() {\n    this.setState({\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      //20200423\n      tickets: healthStore.getAllWithTickets()[\"tickets\"],\n      LatestTicket: healthStore.getLatestTicket()[\"LatestTicket\"]\n    });\n  }\n  putTicket(username, token) {\n    var int = document.getElementById(\"int\");\n    var float = document.getElementById(\"float\");\n    var temp = int.value + \".\" + float.value;\n    var comment = document.getElementById(\"comment_ticket\").value;\n    Actions.putTicket(temp, comment, username, token);\n    console.log(this.state.tickets);\n  }\n\n\n  handleChange(e) {\n    const int = document.getElementById(\"int\");\n    const float = document.getElementById(\"float\");\n    const temp = int.value + \".\" +float.value;\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var months = \"\";\n    console.log(month);\n    var minut = date.getMinutes();\n    var minutes = \"\";\n    if (minut < 10){\n      minutes = minutes + \"0\" + minut.toString();\n    }else{\n      minutes = minutes + minut.toString();\n    }\n    var createdtime = date.getHours() + ':' + date.getMinutes();\n    console.log(createdtime)\n    if (month < 10){\n      months = \"0\" + month.toString();\n      console.log(month);\n    }else{\n      console.log('zero');\n    }\n    var day = date.getDate();\n    var created = year + '/' + month + '/' + day + ' ' + createdtime;\n    this.props.changeTemp(temp);\n    this.props.changeTime(created);\n  }\n  //これを10の位、１の位でドロップダウンできるように！\n\n  render() {\n    //console.log(this.props);\n    const titlestyle = {color:'#663300'};\n    const token = this.state.token;\n    const username = this.state.username;\n    return (\n      <div class=\"homeobject\">\n      <div class=\"rounded border border-info\" id=\"homeobject\">\n        <h4 class=\"text-light bg-dark\">&nbsp;おねつをはかる</h4>\n          <table class=\"table\">\n            <tr><td>おねつ: </td><td>\n              <select name=\"int\" id=\"int\">\n                <option value=\"36\">36</option>\n                <option value=\"37\">37</option>\n                <option value=\"38\">38</option>\n                <option value=\"39\">39</option>\n              </select> . \n              <select name=\"float\" id=\"float\">\n                <option value=\"0\">0</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n              </select>\n            </td></tr>\n            <tr><td>こめんと: </td><td><input type=\"text\" id=\"comment_ticket\" /></td></tr>\n            <tr><td></td><td></td><input class=\"btn btn btn-pale\" type=\"button\" value = \"OK\" onClick={this.putTicket.bind(this, username, token)} /></tr>\n          </table>\n      </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport $ from \"jquery\";\nimport healthStore from \"../../stores/Stores\"; \nimport * as Actions from \"../../actions/Actions\";\n\n\nexport default class ListTable extends React.Component {\n  //handleChange(e) {\n    //const title = e.target.value;\n    //this.props.changeTitle(title);\n  //}\n  deleteissue(token, id, username){\n        console.log('step1');\n        var deletedissueid = '';\n        if(window.confirm('Are you sure to delete this task?')){\n        //deletedissueid = this.props.ticket['TaskID'];\n        $.ajax( {\n          contentType: \"application/json\",\n          type: 'POST',\n          url: \"https://hmml9crysl.execute-api.us-east-2.amazonaws.com/prod/update-delete-mobtask\",\n          processdata: false,\n          dataType: 'json',\n          data: JSON.stringify({\n            'TaskID' : id,\n            'OperationType': 'delete'\n          }),\n        headers: {\n            'Authorization': token, \n        },\n        success: function(data){\n            console.log(data);\n            Actions.reloadTickets(token, username);\n            },\n        error: function(data){\n            console.log('error', data);\n            }                \n        })\n        }else{\n        window.alert('cancelled');\n        }  \n    }\n\n    dummydelete(token, id){\n        console.log('dummy - token is '+token);\n        console.log('dummy - deletedissueid is '+id);\n    }\n\n    constructor(){\n        super();\n        this.getToken = this.getToken.bind(this);\n        this.state = {\n          total: 5, \n          items:[\n            {id: 0, created: \"-\", temp: \"-\", comment: \"-\"}\n          ],\n          token: healthStore.getAll()[\"token\"],\n          username: healthStore.getAll()[\"username\"],\n          tickets: []\n        }\n      }\n\n    componentDidMount() {\n        healthStore.on(\"change\", this.getToken);\n        console.log(\"count\", healthStore.listenerCount(\"change\"));\n      }\n\n      componentWillUnmount() {\n        healthStore.removeListener(\"change\", this.getToken);\n      }\n\n      getToken() {\n        this.setState({\n          token: healthStore.getAll()[\"token\"],\n          username: healthStore.getAll()[\"username\"],\n          //20200423\n          tickets: healthStore.getAllWithTickets()[\"tickets\"]\n        });\n      }\n      //20200423\n      getTickets() {\n        this.setState({\n          token: healthStore.getAll()[\"token\"],\n          username: healthStore.getAll()[\"username\"],\n          tickets: healthStore.getAllWithTickets()[\"tickets\"]\n        });\n      }\n\n      reloadToken(newToken, newusername) {\n        Actions.reloadToken(newToken, newusername);\n      }\n      //20200423\n      reloadTickets(newToken, newusername) {\n        Actions.reloadTickets(newToken, newusername);\n        console.log(this.state.tickets);\n      }\n\n\n\n\n    render() {\n    //console.log(this.props);\n    const token = this.state.token;\n    return (\n    \t<div>\n    \t<table class=\"table\" id=\"table1\">\n    \t<thead><tr><th>いつはかった</th><th>おねつ</th><th>こめんと</th><th>操作</th></tr></thead>\n    \t<tbody id=\"healthtable\">\n    \t{this.props.tickets.map((tickets, i) => \n    \t\t{\n    \t\t\treturn (\n    \t\t\t\t<tr><td>{tickets.Created}</td><td>{tickets.title}</td><td>{tickets.Comment}</td><td><input type=\"button\" class=\"btn btn btn-pale\" id={tickets.TaskID} value=\"-\" onClick={this.deleteissue.bind(this, token, tickets.TaskID, this.props.username)} /></td></tr>\n    \t\t\t\t)\n    \t\t})}\n    \t</tbody>\n    \t</table>\n    \t</div>\n    );\n  }\n}\n\n","//https://teratail.com/questions/122179\n\nimport React from \"react\";\nimport ListTable from \"./list/listtable\"\nimport 'datatables.net';\nimport 'datatables.net-dt/css/jquery.dataTables.css';\nimport * as Actions from \"../actions/Actions\";\nimport healthStore from \"../stores/Stores\"; \n\nvar $ = require('jquery');\n\nfunction TablePagenation(){\n    $('#table1').dataTable().fnDestroy();\n    $(\"#table1\").DataTable({\n          // 件数切替機能 無効\n    lengthChange: false,\n    // 情報表示 無効\n    info: false,\n    // ページング機能 無効\n    paging: false\n    });\n}\n\nexport default class List extends React.Component {\n  //handleChange(e) {\n    //const title = e.target.value;\n    //this.props.changeTitle(title);\n  //}\n  constructor(){\n    super();\n    this.getToken = this.getToken.bind(this);\n    this.state = {\n      total: 5, \n      items:[\n        {id: 0, created: \"-\", temp: \"-\", comment: \"-\"}\n      ],\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      tickets: []\n    }\n  }\n\n  componentDidMount() {\n    healthStore.on(\"change\", this.getToken);\n    console.log(\"count\", healthStore.listenerCount(\"change\"));\n  }\n\n  componentWillUnmount() {\n    healthStore.removeListener(\"change\", this.getToken);\n  }\n\n  getToken() {\n    this.setState({\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      //20200423\n      tickets: healthStore.getAllWithTickets()[\"tickets\"]\n    });\n  }\n  //20200423\n  getTickets() {\n    this.setState({\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      tickets: healthStore.getAllWithTickets()[\"tickets\"]\n    });\n  }\n\n  reloadToken(newToken, newusername) {\n    Actions.reloadToken(newToken, newusername);\n  }\n  //20200423\n  reloadTickets(newToken, newusername) {\n    Actions.reloadTickets(newToken, newusername);\n    console.log(this.state.tickets);\n  }\n\n\n  addItems(){\n    this.setState({items: [\n        {id: 1, created: \"2020-2-3 11:59\", temp: \"35.0\", comment: \"aaa\"},\n        {id: 2, created: \"2020-2-3 12:59\", temp: \"36.0\", comment: \"aaa\"},\n        {id: 3, created: \"2020-2-3 13:59\", temp: \"37.0\", comment: \"aaa\"},\n        {id: 4, created: \"2020-2-3 14:59\", temp: \"38.0\", comment: \"aaa\"},\n        {id: 5, created: \"2020-2-3 15:59\", temp: \"39.0\", comment: \"aaa\"},\n      ]\n    });\n    console.log(this.state);\n    //TablePagenation();\n  }\n  addMoreItems(){\n      const newarray = [\n        {id: 1, created: \"2020-2-3 11:59\", temp: \"37.0\", comment: \"aaa\"},\n        {id: 2, created: \"2020-2-3 11:52\", temp: \"37.0\", comment: \"aaa\"},\n        {id: 3, created: \"2020-2-3 11:59\", temp: \"38.0\", comment: \"aaa\"},\n      ];\n    this.setState({\n      items: this.state.items.concat(newarray)\n    });\n    console.log(this.state);\n    //TablePagenation();\n  }\n\n  render() {\n    //console.log(this.props);\n    const token = this.state.token;\n    const username = this.state.username;\n    return (\n      <div>\n      <div>\n      </div>\n      <ul class=\"grid-container\">\n      <li class=\"grid-box box-big\">\n      <div class=\"rounded border border-info\" id=\"homeobject\">\n        <h4 class=\"text-light bg-dark\">&nbsp;これまでのおねつ</h4>\n        <br />\n        <input class=\"btn btn-lg btn btn-pale btn-block\" type=\"button\" value=\"リストを更新する\" onClick={this.reloadTickets.bind(this, token, username)} />\n        <br />\n        <ListTable items={this.state.items} total={this.state.total} tickets={this.state.tickets} username={username}/>\n      </div>\n      </li>\n      </ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\n//20200425\nimport * as Actions from \"../../actions/Actions\";\nimport healthStore from \"../../stores/Stores\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport List from '../../components/list';\n\nexport default class HomeTodaysStatistics extends React.Component {\n  \n  //20200425\n  constructor(){\n    super();\n    this.getToken = this.getToken.bind(this);\n    this.state = {\n      total: 5, \n      items:[\n        {id: 0, created: \"-\", temp: \"-\", comment: \"-\"}\n      ],\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      tickets: [{title: \"-\", Created: \"---\", Comment: \"---\"}]\n    }\n  }\n\n  componentDidMount() {\n    healthStore.on(\"change\", this.getToken);\n    console.log(\"count\", healthStore.listenerCount(\"change\"));\n  }\n\n  componentWillUnmount() {\n    healthStore.removeListener(\"change\", this.getToken);\n  }\n\n  getToken() {\n    this.setState({\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      //20200423\n      tickets: healthStore.getAllWithTickets()[\"tickets\"]\n    });\n  }\n  //20200423\n  getTickets() {\n    this.setState({\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      tickets: healthStore.getAllWithTickets()[\"tickets\"]\n    });\n  }\n\n  reloadToken(newToken, newusername) {\n    Actions.reloadToken(newToken, newusername);\n  }\n  //20200423\n  reloadTickets(newToken, newusername) {\n    Actions.reloadTickets(newToken, newusername);\n    console.log(this.state.tickets);\n  }\n  //-20200425\n\n  render() {\n    //console.log(this.props);\n    const titlestyle = {color:'#663300'};\n    const linkstyle = {style:\"text-align:center;\"};\n    var todayscount = 0;\n    var todaystickets = [];\n    var latestcreated = \"\";\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    console.log(month.toString());\n    //var createdtime = date.getHours() + ':' + date.getMinutes();\n    //console.log(createdtime)\n    if (month.toString().length === 1){\n      month = '0' + month;\n      console.log('plus zero');\n    }else{\n      console.log('zero');\n    }\n    var day = date.getDate();\n    var currentdate = year + '-' + month + '-' + day;\n    console.log(currentdate.toString());\n\n\n\n    //20200425\n    var latestTicket = {title: \"-\", Created: \"---\", Comment: \"---\"};\n    if(typeof this.state.tickets !== \"undefined\"){\n      latestTicket = this.state.tickets[0];\n      latestcreated = latestTicket.Created.substr(0, 10);\n      todaystickets = this.state.tickets.filter(ticket => ticket.Created.indexOf(currentdate) != -1);\n      todayscount = todaystickets.length;\n    }\n    console.log(latestTicket);\n    //prep: {latestTicket.title}, {latestTicket.title}, {this.props.todayscount}\n\n    return (\n      <div class=\"homeobject\">\n      <div class=\"rounded border border-info\" id=\"homeobject\">\n        <h4 class=\"text-light bg-dark\">&nbsp;さいきんのおねつ</h4>\n        <table class=\"table\">\n          <tr><td>直近のおねつ: </td><td>{latestTicket.title}</td></tr>\n          <tr><td>いつはかった: </td><td>{latestTicket.Created}</td></tr>\n          <tr><td>きょう何回はかった: </td><td>{todayscount}</td></tr>\n        </table>\n        <Link to='/list'>&nbsp;&nbsp;&nbsp;>>>>すべてのおねつを見る</Link>\n        <Route path='/list' component={List} />\n      </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {Line} from 'react-chartjs-2';\nimport * as Actions from \"../../actions/Actions\";\nimport healthStore from \"../../stores/Stores\"; \n\n//パースの練習\nconst sampledate = '2020-01-25 15:20:55';\nconst sampledateobject = Date.parse(sampledate);\nconsole.log(sampledateobject);\nconst sampletemp ='37.7';\nconst sampletempobject = parseFloat(sampletemp);\nconsole.log(sampletempobject);\n\n\nconst tickets = [\n  {title: '37.0', Created: '2020-01-25 15:20:55'},\n  {title: '36.0', Created: '2020-02-14 15:20:55'},\n  {title: '35.0', Created: '2020-02-25 15:20:55'},\n  {title: '36.0', Created: '2020-02-28 15:20:55'},\n  {title: '37.0', Created: '2020-03-23 15:20:55'},\n  {title: '36.0', Created: '2020-04-05 15:20:55'},\n  {title: '37.0', Created: '2020-04-25 15:20:55'}\n]\n\nvar adjustedtickets = []\n\nfor (const i in tickets){\n  console.log(i);\n  console.log(tickets[i].title);\n  console.log(tickets[i].Created);\n  console.log('----');\n  const temp = parseFloat(tickets[i].title);\n  const datetime = Date.parse(tickets[i].Created);\n  adjustedtickets.push({x: datetime, y: temp});\n}\n\nconst data = {\n  labels: ['2020-01', '2020-02', '2020-03', '2020-04', '2020-05'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'round',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'square',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#eee',\n      pointBorderWidth: 10,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 1,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: adjustedtickets\n    }\n  ]\n};\n\nconst options = {\n    title:{\n        display:true,\n        text:\"おねつグラフ\"\n    },\n    scales: {\n        xAxes: [{\n            type: \"time\",\n            time: {\n                format: \"YYYY-MM\",\n                unit: \"week\",\n                displayFormats: {\n                    month: 'YYYY-MM'\n                },\n                tooltipFormat: 'll'\n            },\n            scaleLabel: {\n                display: true,\n                labelString: 'Date'\n            }\n        }, ],\n        yAxes: [{\n            scaleLabel: {\n                display: true,\n                labelString: 'points'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }]\n    },\n};\n\nexport default class HomeGraph extends React.Component {\n  //handleChange(e) {\n    //const title = e.target.value;\n    //this.props.changeTitle(title);\n  //}\n  constructor(){\n    super();\n    this.getToken = this.getToken.bind(this);\n    this.state = {\n      total: 5, \n      items:[\n        {id: 0, created: \"-\", temp: \"-\", comment: \"-\"}\n      ],\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      tickets: [],\n      LatestTicket: []\n    }\n  }\n  componentDidMount() {\n    healthStore.on(\"change\", this.getToken);\n    console.log(\"count\", healthStore.listenerCount(\"change\"));\n  }\n\n  componentWillUnmount() {\n    healthStore.removeListener(\"change\", this.getToken);\n  }\n\n  getToken() {\n    this.setState({\n      token: healthStore.getAll()[\"token\"],\n      username: healthStore.getAll()[\"username\"],\n      //20200423\n      tickets: healthStore.getAllWithTickets()[\"tickets\"],\n      LatestTicket: healthStore.getLatestTicket()[\"LatestTicket\"]\n    });\n  }\n\n  render() {\n    const datatickets = this.state.tickets;\n    const adjusteddatatickets = []\n    for (const i in datatickets){\n          console.log(i);\n          console.log(datatickets[i].title);\n          console.log(datatickets[i].Created);\n          console.log('----');\n          const temp = parseFloat(datatickets[i].title);\n          const datetime = Date.parse(datatickets[i].Created);\n          adjusteddatatickets.push({x: datetime, y: temp});\n        }\n    const graphdata = {\n      labels: ['2020-01', '2020-02', '2020-03', '2020-04', '2020-05'],\n      datasets: [\n        {\n          label: 'おねつ',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'round',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'square',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#eee',\n          pointBorderWidth: 2,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 1,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: adjusteddatatickets\n        }\n      ]\n    };\n    const graphoptions = {\n          title:{\n              display:true,\n              text:\"おねつグラフ\"\n          },\n          scales: {\n              xAxes: [{\n                  type: \"time\",\n                  time: {\n                      format: \"YYYY-MM\",\n                      unit: \"week\",\n                      displayFormats: {\n                          month: 'YYYY-MM'\n                      },\n                      tooltipFormat: 'll'\n                  },\n                  scaleLabel: {\n                      display: true,\n                      labelString: 'Date'\n                  }\n              }, ],\n              yAxes: [{\n                  scaleLabel: {\n                      display: true,\n                      labelString: 'points'\n                  },\n                  ticks: {\n                      beginAtZero: true,\n                      min: 36.0,\n                      max: 38.5\n                  }\n              }]\n          },\n      };\n\n    //console.log(this.props);\n    console.log(adjusteddatatickets); \n    return (\n      <div class=\"rounded border border-info\">\n        <h4 class=\"text-light bg-dark\">&nbsp;おねつグラフ</h4>\n        <Line data={graphdata} options={graphoptions} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport HomeLoginBar from \"./home/home-loginbar\";\nimport HomeInput from \"./home/home-input\";\nimport HomeTodaysStatistics from \"./home/home-todaysstatistics\";\nimport HomeGraph from \"./home/home-graph\";\nimport List from \"./list\";\n\n//import Ajax as $\n\nfunction getLatestTemp(usr, token){\n\n}\n\nfunction addNewTemp(usr, token){\n\n}\n\n//var items =[]\nfunction getNewList(usr, token){\n  //ここで新しいリストを獲得して、上位のComponent(App.js)のstate.itemsに値を引き渡せるか？\n  //１まずはAjax通信でuser, tokenをもとにリストを返してもらう(この時点で並び替えが必要であれば並び替える)\n  //list.jsでhomeを読み込んでもらう。tokenをlist.jsに引き渡す\n}\n\nexport default class Home extends React.Component {\n  //handleChange(e){}\n\n  constructor() {\n    super();\n    this.state = {username: \"\", temp: \"-\", time: \"???\", password: \"\", token: \"no token\", todayscount: 0};\n  }\n  \n  changeUsername(username) {\n    this.setState({username});\n  }\n  changePassword(password){\n    this.setState({password});\n  }\n  changeToken(token){\n    this.setState({token});\n  }\n  changeTemp(temp) {\n    this.setState({temp});\n  }\n  changeTime(time){\n    this.setState({time});\n  }\n\n  CognitoLogin(){\n    //this.state.usernameとpasswordを使ってCognito Loginを果たす\n  }\n\n  GetItems(){\n    //\n  }\n\n  render() {\n    //console.log(this.props);\n    const titlestyle = {color:'#663300'};\n    const liststyle = {display:'none'};\n    return (\n      <div>\n        <HomeLoginBar changeUsername={this.changeUsername.bind(this)} changePassword={this.changePassword.bind(this)} changeToken={this.changeToken.bind(this)} username={this.state.username} password={this.state.password} token={this.state.token} />\n        <br />\n        <br />\n        <ul class=\"grid-container\">\n          <li class=\"grid-box\"><HomeInput changeTemp={this.changeTemp.bind(this)} changeTime={this.changeTime.bind(this)} temp={this.state.temp} /></li>\n          <li class=\"grid-box\"><HomeTodaysStatistics latesttemp={this.state.temp} latesttime={this.state.time} todayscount={this.state.todayscount} /></li><br />\n          <li class=\"grid-box box-big\"><HomeGraph /></li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport Home from './components/home'\nimport List from './components/list'\n\nconst App = () => (\n  <BrowserRouter>\n    <div>\n        <ul class=\"sidebarMenuInner\">\n          <li class=\"nav-item\"><Link to='/'>ほーむ</Link></li>\n          <li class=\"nav-item\"><Link to='/list'>いちらん</Link></li>\n        </ul>\n      <hr />\n      <Route exact path='/' component={Home} />\n      <Route path='/list' component={List} />\n    </div>\n  </BrowserRouter>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}